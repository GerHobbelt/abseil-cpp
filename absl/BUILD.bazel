#
# Copyright 2017 The Abseil Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@bazel_skylib//lib:selects.bzl", "selects")
load(
    "//absl:copts/configure_copts.bzl",
    "ABSL_DEFAULT_COPTS",
    "ABSL_DEFAULT_LINKOPTS",
    "ABSL_TEST_COPTS",
)
load("//absl:cc_static_library.bzl", "cc_static_library")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

config_setting(
    name = "clang_compiler",
    flag_values = {
        "@bazel_tools//tools/cpp:compiler": "clang",
    },
    visibility = [":__subpackages__"],
)

config_setting(
    name = "gcc_compiler",
    flag_values = {
        "@bazel_tools//tools/cpp:compiler": "gcc",
    },
    visibility = [":__subpackages__"],
)

config_setting(
    name = "msvc_compiler",
    flag_values = {
        "@bazel_tools//tools/cpp:compiler": "msvc-cl",
    },
    visibility = [":__subpackages__"],
)

config_setting(
    name = "clang-cl_compiler",
    flag_values = {
        "@bazel_tools//tools/cpp:compiler": "clang-cl",
    },
    visibility = [":__subpackages__"],
)

config_setting(
    name = "osx",
    constraint_values = [
        "@platforms//os:osx",
    ],
)

config_setting(
    name = "ios",
    constraint_values = [
        "@platforms//os:ios",
    ],
)

config_setting(
    name = "ppc",
    values = {
        "cpu": "ppc",
    },
    visibility = [":__subpackages__"],
)

config_setting(
    name = "cpu_wasm",
    values = {
        "cpu": "wasm",
    },
    visibility = [":__subpackages__"],
)

config_setting(
    name = "cpu_wasm32",
    values = {
        "cpu": "wasm32",
    },
    visibility = [":__subpackages__"],
)

config_setting(
    name = "platforms_wasm32",
    constraint_values = [
        "@platforms//cpu:wasm32",
    ],
    visibility = [":__subpackages__"],
)

config_setting(
    name = "platforms_wasm64",
    constraint_values = [
        "@platforms//cpu:wasm64",
    ],
    visibility = [":__subpackages__"],
)

selects.config_setting_group(
    name = "wasm",
    match_any = [
        ":cpu_wasm",
        ":cpu_wasm32",
        ":platforms_wasm32",
        ":platforms_wasm64",
    ],
    visibility = [":__subpackages__"],
)

config_setting(
    name = "fuchsia",
    values = {
        "cpu": "fuchsia",
    },
    visibility = [":__subpackages__"],
)

# This is a manually compiled list of the components we use from tcmalloc (which is currently the 
# only user of abseil).
cc_library(
    alwayslink = True,
    name = "absl",
    copts = ABSL_DEFAULT_COPTS,
    linkopts = ABSL_DEFAULT_LINKOPTS,
    deps = [
        "//absl/algorithm:container",
        "//absl/base",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:dynamic_annotations",
        "//absl/base:malloc_internal",
        "//absl/cleanup",
        "//absl/container:btree",
        "//absl/container:fixed_array",
        "//absl/container:flat_hash_map",
        "//absl/container:flat_hash_set",
        "//absl/container:node_hash_set",
        "//absl/debugging:leak_check",
        "//absl/debugging:stacktrace",
        "//absl/debugging:symbolize",
        "//absl/flags:flag",
        "//absl/functional:function_ref",
        "//absl/hash:hash",
        "//absl/memory",
        "//absl/numeric:bits",
        "//absl/random",
        "//absl/random:bit_gen_ref",
        "//absl/random:distributions",
        "//absl/status",
        "//absl/status:statusor",
        "//absl/strings",
        "//absl/strings:str_format",
        "//absl/synchronization",
        "//absl/time",
        "//absl/types:optional",
        "//absl/types:span",
    ],
)

cc_binary(
    name = "absl_shared",
    deps = [
        ":absl",
    ],
    linkshared = True,
)

# Uses the custom rule in cc_static_library.bzl
cc_static_library(
    name = "absl_static",
    dep = ":absl"
)
